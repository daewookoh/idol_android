package net.ib.mn.data.model

import net.ib.mn.data.DataMapper
import net.ib.mn.domain.model.Idol

data class IdolEntity(
    val id: Int,
    val miracleCount: Int,
    val angelCount: Int,
    val rookieCount: Int,
    var anniversary: String,
    var anniversaryDays: Int?,
    val birthDay: String?,
    var burningDay: String?,
    val category: String,
    val comebackDay: String?,
    val debutDay: String?,
    val description: String,
    val fairyCount: Int,
    val groupId: Int,
    var heart: Long,
    var imageUrl: String?,
    var imageUrl2: String?,
    var imageUrl3: String?,
    val isViewable: String,
    val name: String,
    val nameEn: String,
    val nameJp: String,
    val nameZh: String,
    val nameZhTw: String,
    val resourceUri: String,
    var top3: String?,
    var top3Type: String?,
    val top3Seq: Int,
    val top3ImageVer: String?,
    val type: String,
    val infoSeq: Int,
    val isLunarBirthday: String?,
    val mostCount: Int,
    val mostCountDesc: String?,
    var updateTs: Int,
    val sourceApp: String?,
    val fdName: String?,
    val fdNameEn: String?
): DataMapper<Idol> {
    override fun toDomain(): Idol =
        Idol(
            id,
            miracleCount,
            angelCount,
            rookieCount,
            anniversary,
            anniversaryDays,
            birthDay ?: "",
            burningDay,
            category,
            comebackDay,
            debutDay,
            description,
            fairyCount,
            groupId,
            heart,
            imageUrl,
            imageUrl2,
            imageUrl3,
            isViewable,
            name,
            nameEn,
            nameJp,
            nameZh,
            nameZhTw,
            resourceUri,
            top3,
            top3Type,
            top3Seq,
            top3ImageVer ?: "",
            type,
            infoSeq,
            isLunarBirthday,
            mostCount,
            mostCountDesc,
            updateTs,
            sourceApp,
            fdName,
            fdNameEn
        )
}

fun Idol.toIdolEntity() : IdolEntity{
    return IdolEntity(
        id,
        miracleCount,
        angelCount,
        rookieCount,
        anniversary,
        anniversaryDays,
        birthDay ?: "",
        burningDay,
        category,
        comebackDay,
        debutDay,
        description,
        fairyCount,
        groupId,
        heart,
        imageUrl,
        imageUrl2,
        imageUrl3,
        isViewable,
        name,
        nameEn,
        nameJp,
        nameZh,
        nameZhTw,
        resourceUri,
        top3,
        top3Type,
        top3Seq,
        top3ImageVer,
        type,
        infoSeq,
        isLunarBirthday,
        mostCount,
        mostCountDesc,
        updateTs,
        sourceApp,
        fdName,
        fdNameEn
    )
}